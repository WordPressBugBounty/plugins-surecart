{"version":3,"names":["registry","watchedIcons","getIconLibrary","name","_a","window","filter","lib","registerIconLibrary","options","unregisterIconLibrary","push","resolver","mutator","map","icon","library","redraw","ceRegisterIconLibrary"],"sources":["src/components/ui/icon/library.ts"],"sourcesContent":["import { IconLibrary } from '../../../types';\n\nexport type IconLibraryResolver = (name: string) => string;\nexport type IconLibraryMutator = (svg: SVGElement) => void;\n\nlet registry: IconLibrary[] = [];\nlet watchedIcons: any[] = [];\n\nexport function watchIcon(icon: any) {\n  watchedIcons.push(icon);\n}\n\nexport function unwatchIcon(icon: any) {\n  watchedIcons = watchedIcons.filter(el => el !== icon);\n}\n\nexport function getIconLibrary(name?: string) {\n  return window?.registry?.filter(lib => lib.name === name)[0];\n}\n\nexport function registerIconLibrary(name: string, options: { resolver: IconLibraryResolver; mutator?: IconLibraryMutator }) {\n  unregisterIconLibrary(name);\n  registry.push({\n    name,\n    resolver: options.resolver,\n    mutator: options.mutator,\n  });\n  window.registry = registry;\n\n  // Redraw watched icons\n  watchedIcons.map(icon => {\n    if (icon.library === name) {\n      icon.redraw();\n    }\n  });\n}\n\nexport function unregisterIconLibrary(name: string) {\n  window.registry = window?.registry?.filter(lib => lib.name !== name);\n}\n\nwindow.ceRegisterIconLibrary = registerIconLibrary;\n"],"mappings":"AAKA,IAAIA,EAA0B,GAC9B,IAAIC,EAAsB,G,SAUVC,EAAeC,G,MAC7B,OAAOC,EAAAC,SAAM,MAANA,cAAM,SAANA,OAAQL,YAAQ,MAAAI,SAAA,SAAAA,EAAEE,QAAOC,GAAOA,EAAIJ,OAASA,IAAM,EAC5D,C,SAEgBK,EAAoBL,EAAcM,GAChDC,EAAsBP,GACtBH,EAASW,KAAK,CACZR,OACAS,SAAUH,EAAQG,SAClBC,QAASJ,EAAQI,UAEnBR,OAAOL,SAAWA,EAGlBC,EAAaa,KAAIC,IACf,GAAIA,EAAKC,UAAYb,EAAM,CACzBY,EAAKE,Q,IAGX,C,SAEgBP,EAAsBP,G,MACpCE,OAAOL,UAAWI,EAAAC,SAAM,MAANA,cAAM,SAANA,OAAQL,YAAQ,MAAAI,SAAA,SAAAA,EAAEE,QAAOC,GAAOA,EAAIJ,OAASA,GACjE,CAEAE,OAAOa,sBAAwBV,S","ignoreList":[]}